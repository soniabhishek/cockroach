package feed_line

import (
	"github.com/crowdflux/angel/app/models"
)

// ShortHand for channel of FLUs i.e. FeedLine
type Fl chan FLU

// Get new FeedLine channel with unlimited size
func New() Fl {

	feedLine := make(chan FLU, 50000)
	return feedLine
}

func NewBig() Fl {
	feedLine := make(chan FLU, 500000)
	return feedLine
}

// Get new FeedLine channel with fixed size
func NewFixedSize(size int) Fl {
	return make(chan FLU, size)
}

//--------------------------------------------------------------------------------//

type FLU struct {
	models.FeedLineUnit

	// Change the name
	// Used here for collecting & passing around information about
	// previous steps of the flu processing
	Trip []Builder
}

//--------------------------------------------------------------------------------//

type Builder interface {
	// Returns the step identifier
	Step() uint

	// Returns true if the step pending
	Pending() bool

	// Returns the step success
	Success() bool

	// Returns the input data
	InData() interface{}

	// Returns the data generated by that step
	OutData() interface{}
}
